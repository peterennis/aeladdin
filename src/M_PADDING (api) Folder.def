Option Compare Database
Option Explicit

Private Type udtBROWSEINFO
    hwndOwner As Long
    pidlRoot As Long
    pszDisplayName As Long
    lpszTitle As Long
    ulFlags As Long
    lpfn As Long
    lParam As Long
    iImage As Long
End Type

Private Const BIF_RETURNONLYFSDIRS = 1
Private Const MAX_PATH = 260

Private Declare Sub API_CoTaskMemFree Lib "ole32.dll" Alias "CoTaskMemFree" (ByVal hMem As Long)
Private Declare Function API_lstrCat Lib "kernel32" Alias "lstrcatA" (ByVal lpString1 As String, ByVal lpString2 As String) As Long
Private Declare Function API_SHBrowseForFolder Lib "shell32.dll" Alias "SHBrowseForFolder" (lpbi As udtBROWSEINFO) As Long
Private Declare Function api_SHGetPathFromIDList Lib "shell32.dll" Alias "SHGetPathFromIDList" (ByVal pidList As Long, ByVal lpBuffer As String) As Long


Public Function m_Folder_SelectBox(sPrompt As String, Optional hwnd As Long) As String
'    Purpose    : Select a directory (or folder) using a Windows standard dialog box
'    Inputs     : strPrompt : Message show in the dialog box
    
4       Dim iNull As Integer
5       Dim lpidList As Long
6       Dim lResult As Long
7       Dim sPath As String
8       Dim udtBI As udtBROWSEINFO
    
10      With udtBI
11          If hwnd = 0 Then
12              .hwndOwner = Application.hWndAccessApp
13          Else
14              .hwndOwner = hwnd
15          End If
16          .lpszTitle = API_lstrCat(sPrompt, "")
17          .ulFlags = BIF_RETURNONLYFSDIRS
18      End With
    
20      lpidList = API_SHBrowseForFolder(udtBI)
21      If lpidList Then
22          sPath = String$(MAX_PATH, 0)
23          lResult = api_SHGetPathFromIDList(lpidList, sPath)
24          Call API_CoTaskMemFree(lpidList)
25          iNull = InStr(sPath, vbNullChar)
26          If iNull Then
27              sPath = Left$(sPath, iNull - 1)
28          End If
29      End If
    
31      m_Folder_SelectBox = sPath
    
End Function